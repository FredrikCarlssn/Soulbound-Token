(self.webpackChunkreact_frontend=self.webpackChunkreact_frontend||[]).push([[8375],{9253:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BaseAccountAPI=void 0;const a=n(56978),r=n(63952),i=n(73580),s=n(37878),o=n(51304);t.BaseAccountAPI=class{constructor(e){this.isPhantom=!0,this.provider=e.provider,this.overheads=e.overheads,this.entryPointAddress=e.entryPointAddress,this.accountAddress=e.accountAddress,this.paymasterAPI=e.paymasterAPI,this.entryPointView=r.EntryPoint__factory.connect(e.entryPointAddress,e.provider).connect(a.ethers.constants.AddressZero)}async init(){if("0x"===await this.provider.getCode(this.entryPointAddress))throw new Error("entryPoint not deployed at ".concat(this.entryPointAddress));return await this.getAccountAddress(),this}async checkAccountPhantom(){if(!this.isPhantom)return this.isPhantom;return(await this.provider.getCode(this.getAccountAddress())).length>2&&(this.isPhantom=!1),this.isPhantom}async getCounterFactualAddress(){const e=this.getAccountInitCode();try{await this.entryPointView.callStatic.getSenderAddress(e)}catch(t){return t.errorArgs.sender}throw new Error("must handle revert")}async getInitCode(){return await this.checkAccountPhantom()?await this.getAccountInitCode():"0x"}async getVerificationGasLimit(){return 1e5}async getPreVerificationGas(e){const t=await(0,i.resolveProperties)(e);return(0,o.calcPreVerificationGas)(t,this.overheads)}packUserOp(e){return(0,s.packUserOp)(e,!1)}async encodeUserOpCallDataAndGasLimit(e){var t,n;function r(e){return null==e||""===e?null:a.BigNumber.from(e.toString())}const i=null!==(t=r(e.value))&&void 0!==t?t:a.BigNumber.from(0),s=await this.encodeExecute(e.target,i,e.data);return{callData:s,callGasLimit:null!==(n=r(e.gasLimit))&&void 0!==n?n:await this.provider.estimateGas({from:this.entryPointAddress,to:this.getAccountAddress(),data:s})}}async getUserOpHash(e){const t=await(0,i.resolveProperties)(e),n=await this.provider.getNetwork().then((e=>e.chainId));return(0,s.getUserOpHash)(t,this.entryPointAddress,n)}async getAccountAddress(){return null==this.senderAddress&&(null!=this.accountAddress?this.senderAddress=this.accountAddress:this.senderAddress=await this.getCounterFactualAddress()),this.senderAddress}async estimateCreationGas(e){if(null==e||"0x"===e)return 0;const t=e.substring(0,42),n="0x"+e.substring(42);return await this.provider.estimateGas({to:t,data:n})}async createUnsignedUserOp(e){var t,n;const{callData:r,callGasLimit:i}=await this.encodeUserOpCallDataAndGasLimit(e),s=await this.getInitCode(),o=await this.estimateCreationGas(s),c=a.BigNumber.from(await this.getVerificationGasLimit()).add(o);let{maxFeePerGas:d,maxPriorityFeePerGas:l}=e;if(null==d||null==l){const e=await this.provider.getFeeData();null==d&&(d=null!==(t=e.maxFeePerGas)&&void 0!==t?t:void 0),null==l&&(l=null!==(n=e.maxPriorityFeePerGas)&&void 0!==n?n:void 0)}const u={sender:this.getAccountAddress(),nonce:this.getNonce(),initCode:s,callData:r,callGasLimit:i,verificationGasLimit:c,maxFeePerGas:d,maxPriorityFeePerGas:l,paymasterAndData:"0x"};let p;if(null!=this.paymasterAPI){const e=Object.assign(Object.assign({},u),{preVerificationGas:await this.getPreVerificationGas(u)});p=await this.paymasterAPI.getPaymasterAndData(e)}return u.paymasterAndData=null!==p&&void 0!==p?p:"0x",Object.assign(Object.assign({},u),{preVerificationGas:this.getPreVerificationGas(u),signature:""})}async signUserOp(e){const t=await this.getUserOpHash(e),n=this.signUserOpHash(t);return Object.assign(Object.assign({},e),{signature:n})}async createSignedUserOp(e){return await this.signUserOp(await this.createUnsignedUserOp(e))}async getUserOpReceipt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e4,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e3;const a=Date.now()+t;for(;Date.now()<a;){const t=await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(e));if(t.length>0)return t[0].transactionHash;await new Promise((e=>setTimeout(e,n)))}return null}}},55051:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DeterministicDeployer=void 0;const a=n(56978),r=n(73580);class i{static getAddress(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return i.getDeterministicDeployAddress(e,t,n)}static async deploy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return await i.instance.deterministicDeploy(e,t,n)}constructor(e){this.provider=e}async isContractDeployed(e){return await this.provider.getCode(e).then((e=>e.length>2))}async isDeployerDeployed(){return await this.isContractDeployed(i.proxyAddress)}async deployFactory(){if(await this.isContractDeployed(i.proxyAddress))return;const e=await this.provider.getBalance(i.deploymentSignerAddress),t=a.BigNumber.from(i.deploymentGasLimit).mul(i.deploymentGasPrice),n=this.provider.getSigner();if(e.lt(t)&&await n.sendTransaction({to:i.deploymentSignerAddress,value:t,gasLimit:i.deploymentGasLimit}),await this.provider.send("eth_sendRawTransaction",[i.deploymentTransaction]),!await this.isContractDeployed(i.proxyAddress))throw new Error("raw TX didn't deploy deployer!")}async getDeployTransaction(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];await this.deployFactory();const a=(0,r.hexZeroPad)((0,r.hexlify)(t),32),s=i.getCtrCode(e,n);return{to:i.proxyAddress,data:(0,r.hexConcat)([a,s])}}static getCtrCode(e,t){if("string"!==typeof e)return(0,r.hexlify)(e.getDeployTransaction(...t).data);if(0!==t.length)throw new Error("constructor params can only be passed to ContractFactory");return e}static getDeterministicDeployAddress(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];const a=(0,r.hexZeroPad)((0,r.hexlify)(t),32),s=i.getCtrCode(e,n);return"0x"+(0,r.keccak256)((0,r.hexConcat)(["0xff",i.proxyAddress,a,(0,r.keccak256)(s)])).slice(-40)}async deterministicDeploy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];const a=i.getDeterministicDeployAddress(e,t,n);return await this.isContractDeployed(a)||await this.provider.getSigner().sendTransaction(await this.getDeployTransaction(e,t,n)),a}static init(e){this._instance=new i(e)}static get instance(){if(null==this._instance)throw new Error('must call "DeterministicDeployer.init(ethers.provider)" first');return this._instance}}t.DeterministicDeployer=i,i.proxyAddress="0x4e59b44847b379578588920ca78fbf26c0b4956c",i.deploymentTransaction="0xf8a58085174876e800830186a08080b853604580600e600039806000f350fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf31ba02222222222222222222222222222222222222222222222222222222222222222a02222222222222222222222222222222222222222222222222222222222222222",i.deploymentSignerAddress="0x3fab184622dc19b6109349b94811493bf2a45362",i.deploymentGasPrice=1e11,i.deploymentGasLimit=1e5},83263:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ERC4337EthersProvider=void 0;const r=n(5829),i=n(56978),s=n(73580),o=n(48319),c=n(17532),d=n(37878),l=(0,a(n(18392)).default)("aa.provider");class u extends r.BaseProvider{constructor(e,t,n,a,r,i,s){super({name:"ERC-4337 Custom Network",chainId:e}),this.chainId=e,this.config=t,this.originalSigner=n,this.originalProvider=a,this.httpRpcClient=r,this.entryPoint=i,this.smartAccountAPI=s,this.signer=new o.ERC4337EthersSigner(t,n,this,r,s)}async init(){return this.initializedBlockNumber=await this.originalProvider.getBlockNumber(),await this.smartAccountAPI.init(),this}getSigner(){return this.signer}async perform(e,t){if(l("perform",e,t),"sendTransaction"===e||"getTransactionReceipt"===e)throw new Error("Should not get here. Investigate.");return await this.originalProvider.perform(e,t)}async getTransaction(e){return await super.getTransaction(e)}async getTransactionReceipt(e){const t=await e,n=await this.getSenderAccountAddress();return await new Promise(((e,a)=>{new c.UserOperationEventListener(e,a,this.entryPoint,n,t).start()}))}async getSenderAccountAddress(){return await this.smartAccountAPI.getAccountAddress()}async waitForTransaction(e,t,n){const a=await this.getSenderAccountAddress();return await new Promise(((t,r)=>{new c.UserOperationEventListener(t,r,this.entryPoint,a,e,void 0,n).start()}))}async constructUserOpTransactionResponse(e){const t=await(0,s.resolveProperties)(e),n=(0,d.getUserOpHash)(t,this.config.entryPointAddress,this.chainId),a=new Promise(((e,a)=>{new c.UserOperationEventListener(e,a,this.entryPoint,t.sender,n,t.nonce).start()}));return{hash:n,confirmations:0,from:t.sender,nonce:i.BigNumber.from(t.nonce).toNumber(),gasLimit:i.BigNumber.from(t.callGasLimit),value:i.BigNumber.from(0),data:(0,s.hexValue)(t.callData),chainId:this.chainId,wait:async e=>{const n=await a;return 0!==t.initCode.length&&await this.smartAccountAPI.checkAccountPhantom(),n}}}async detectNetwork(){return this.originalProvider.detectNetwork()}}t.ERC4337EthersProvider=u},48319:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ERC4337EthersSigner=void 0;const a=n(30520),r=n(68408);class i extends r.Signer{constructor(e,t,n,r,i){super(),this.config=e,this.originalSigner=t,this.erc4337provider=n,this.httpRpcClient=r,this.smartAccountAPI=i,(0,a.defineReadOnly)(this,"provider",n)}async sendTransaction(e){var t,n,a;const r=await this.populateTransaction(e);await this.verifyAllNecessaryFields(r);const i=await this.smartAccountAPI.createSignedUserOp({target:null!==(t=r.to)&&void 0!==t?t:"",data:null!==(a=null===(n=r.data)||void 0===n?void 0:n.toString())&&void 0!==a?a:"",value:r.value,gasLimit:r.gasLimit}),s=await this.erc4337provider.constructUserOpTransactionResponse(i);try{await this.httpRpcClient.sendUserOpToBundler(i)}catch(o){throw this.unwrapError(o)}return s}unwrapError(e){var t;if(null!=e.body){const n=JSON.parse(e.body);let a="",r=null===(t=null===n||void 0===n?void 0:n.error)||void 0===t?void 0:t.message;if(!0===(null===r||void 0===r?void 0:r.includes("FailedOp"))){const e=r.match(/FailedOp\((.*)\)/);if(null!=e){const t=e[1].split(",");a="(paymaster address: ".concat(t[1],")"),r=t[2]}}const i=new Error("The bundler has failed to include UserOperation in a batch: ".concat(r," ").concat(a,")"));return i.stack=e.stack,i}return e}async verifyAllNecessaryFields(e){if(null==e.to)throw new Error("Missing call target");if(null==e.data&&null==e.value)throw new Error("Missing call data or value")}connect(e){throw new Error("changing providers is not supported")}async getAddress(){return null==this.address&&(this.address=await this.erc4337provider.getSenderAccountAddress()),this.address}async signMessage(e){return await this.originalSigner.signMessage(e)}async signTransaction(e){throw new Error("not implemented")}async signUserOperation(e){const t=await this.smartAccountAPI.getUserOpHash(e);return await this.originalSigner.signMessage(t)}}t.ERC4337EthersSigner=i},21840:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.HttpRpcClient=void 0;const r=n(56978),i=n(73580),s=a(n(18392)),o=n(37878),c=(0,s.default)("aa.rpc");t.HttpRpcClient=class{constructor(e,t,n){this.bundlerUrl=e,this.entryPointAddress=t,this.chainId=n,this.userOpJsonRpcProvider=new r.ethers.providers.JsonRpcProvider(this.bundlerUrl,{name:"Connected bundler network",chainId:n}),this.initializing=this.validateChainId()}async validateChainId(){const e=await this.userOpJsonRpcProvider.send("eth_chainId",[]),t=parseInt(e);if(t!==this.chainId)throw new Error("bundler ".concat(this.bundlerUrl," is on chainId ").concat(t,", but provider is on chainId ").concat(this.chainId))}async sendUserOpToBundler(e){await this.initializing;const t=(0,o.deepHexlify)(await(0,i.resolveProperties)(e)),n=[t,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",n),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[t,this.entryPointAddress])}async estimateUserOpGas(e){await this.initializing;const t=(0,o.deepHexlify)(await(0,i.resolveProperties)(e)),n=[t,this.entryPointAddress];return await this.printUserOperation("eth_estimateUserOperationGas",n),await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[t,this.entryPointAddress])}async printUserOperation(e,t){let[n,a]=t;const r=await(0,i.resolveProperties)(n);c("sending",e,Object.assign({},r),a)}}},81552:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PaymasterAPI=void 0;t.PaymasterAPI=class{async getPaymasterAndData(e){return"0x"}}},9375:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.wrapProvider=void 0;const r=n(63952),i=n(70651),s=n(83263),o=n(21840),c=n(55051),d=(0,a(n(18392)).default)("aa.wrapProvider");t.wrapProvider=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.getSigner();const a=r.EntryPoint__factory.connect(t.entryPointAddress,e),l=new c.DeterministicDeployer(e),u=await l.deterministicDeploy(new r.SimpleAccountFactory__factory,0,[a.address]),p=new i.SimpleAccountAPI({provider:e,entryPointAddress:a.address,owner:n,factoryAddress:u,paymasterAPI:t.paymasterAPI});d("config=",t);const y=await e.getNetwork().then((e=>e.chainId)),h=new o.HttpRpcClient(t.bundlerUrl,t.entryPointAddress,y);return await new s.ERC4337EthersProvider(y,t,n,e,h,a,p).init()}},70651:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SimpleAccountAPI=void 0;const a=n(56978),r=n(63952),i=n(73580),s=n(9253);class o extends s.BaseAccountAPI{constructor(e){var t;super(e),this.factoryAddress=e.factoryAddress,this.owner=e.owner,this.index=null!==(t=e.index)&&void 0!==t?t:0}async _getAccountContract(){return null==this.accountContract&&(this.accountContract=r.SimpleAccount__factory.connect(await this.getAccountAddress(),this.provider)),this.accountContract}async getAccountInitCode(){if(null==this.factory){if(null==this.factoryAddress||""===this.factoryAddress)throw new Error("no factory to get initCode");this.factory=r.SimpleAccountFactory__factory.connect(this.factoryAddress,this.provider)}return(0,i.hexConcat)([this.factory.address,this.factory.interface.encodeFunctionData("createAccount",[await this.owner.getAddress(),this.index])])}async getNonce(){if(await this.checkAccountPhantom())return a.BigNumber.from(0);const e=await this._getAccountContract();return await e.nonce()}async encodeExecute(e,t,n){return(await this._getAccountContract()).interface.encodeFunctionData("execute",[e,t,n])}async signUserOpHash(e){return await this.owner.signMessage((0,i.arrayify)(e))}}t.SimpleAccountAPI=o},17532:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserOperationEventListener=void 0;const r=n(73580),i=(0,a(n(18392)).default)("aa.listener");t.UserOperationEventListener=class{constructor(e,t,n,a,r,i,s){var o;this.resolve=e,this.reject=t,this.entryPoint=n,this.sender=a,this.userOpHash=r,this.nonce=i,this.timeout=s,this.resolved=!1,this.boundLisener=this.listenerCallback.bind(this),setTimeout((()=>{this.stop(),this.reject(new Error("Timed out"))}),null!==(o=this.timeout)&&void 0!==o?o:1e4)}start(){const e=this.entryPoint.filters.UserOperationEvent(this.userOpHash);setTimeout((async()=>{const t=await this.entryPoint.queryFilter(e,"latest");t.length>0?this.listenerCallback(t[0]):this.entryPoint.once(e,this.boundLisener)}),100)}stop(){this.entryPoint.off("UserOperationEvent",this.boundLisener)}async listenerCallback(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a;const r=arguments[arguments.length-1];if(null==r.args)return void console.error("got event without args",r);if(r.args.userOpHash!==this.userOpHash)return void console.log("== event with wrong userOpHash: sender/nonce: event.".concat(r.args.sender,"@").concat(r.args.nonce.toString(),"!= userOp.").concat(this.sender,"@").concat(parseInt(null===(a=this.nonce)||void 0===a?void 0:a.toString())));const s=await r.getTransactionReceipt();s.transactionHash=this.userOpHash,i("got event with status=",r.args.success,"gasUsed=",s.gasUsed),r.args.success||await this.extractFailureReason(s),this.stop(),this.resolve(s),this.resolved=!0}async extractFailureReason(e){i("mark tx as failed"),e.status=0;const t=await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash,this.sender),e.blockHash);if(null!=t[0]){let e=t[0].args.revertReason;e.startsWith("0x08c379a0")&&(e=r.defaultAbiCoder.decode(["string"],"0x"+e.substring(10)).toString()),i("rejecting with reason: ".concat(e)),this.reject(new Error("UserOp failed with reason: ".concat(e)))}}}},51304:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.calcPreVerificationGas=t.DefaultGasOverheads=void 0;const a=n(37878),r=n(73580);t.DefaultGasOverheads={fixed:21e3,perUserOp:18300,perUserOpWord:4,zeroByte:4,nonZeroByte:16,bundleSize:1,sigSize:65},t.calcPreVerificationGas=function(e,n){const i=Object.assign(Object.assign({},t.DefaultGasOverheads),null!==n&&void 0!==n?n:{}),s=Object.assign({preVerificationGas:21e3,signature:(0,r.hexlify)(Buffer.alloc(i.sigSize,1))},e),o=(0,r.arrayify)((0,a.packUserOp)(s,!1)),c=(o.length+31)/32,d=o.map((e=>0===e?i.zeroByte:i.nonZeroByte)).reduce(((e,t)=>e+t));return Math.round(d+i.fixed/i.bundleSize+i.perUserOp+i.perUserOpWord*c)}},50884:function(e,t,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.DeterministicDeployer=t.HttpRpcClient=t.ERC4337EthersProvider=t.ERC4337EthersSigner=t.wrapProvider=t.PaymasterAPI=t.SimpleAccountAPI=void 0;var i=n(70651);Object.defineProperty(t,"SimpleAccountAPI",{enumerable:!0,get:function(){return i.SimpleAccountAPI}});var s=n(81552);Object.defineProperty(t,"PaymasterAPI",{enumerable:!0,get:function(){return s.PaymasterAPI}});var o=n(9375);Object.defineProperty(t,"wrapProvider",{enumerable:!0,get:function(){return o.wrapProvider}});var c=n(48319);Object.defineProperty(t,"ERC4337EthersSigner",{enumerable:!0,get:function(){return c.ERC4337EthersSigner}});var d=n(83263);Object.defineProperty(t,"ERC4337EthersProvider",{enumerable:!0,get:function(){return d.ERC4337EthersProvider}});var l=n(21840);Object.defineProperty(t,"HttpRpcClient",{enumerable:!0,get:function(){return l.HttpRpcClient}});var u=n(55051);Object.defineProperty(t,"DeterministicDeployer",{enumerable:!0,get:function(){return u.DeterministicDeployer}}),r(n(51304),t)},43704:function(e,t,n){"use strict";var a,r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.resolveHexlify=t.deepHexlify=t.rethrowError=t.decodeErrorReason=t.getUserOpHash=t.packUserOp=t.AddressZero=void 0;const i=n(73580),s=n(79154),o=n(56978),c=(0,r(n(18392)).default)("aa.utils"),d="simulateValidation",l=null===(a=s.abi.find((e=>e.name===d)))||void 0===a?void 0:a.inputs[0];if(null==l)throw new Error("unable to find method ".concat(d," in EP ").concat(s.abi.filter((e=>"function"===e.type)).map((e=>e.name)).join(",")));function u(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(t){const t={components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes",name:"paymasterAndData"},{type:"bytes",name:"signature"}],name:"userOp",type:"tuple"};let n=i.defaultAbiCoder.encode([t],[Object.assign(Object.assign({},e),{signature:"0x"})]);return n="0x"+n.slice(66,n.length-64),n}return function(e,t){const n=e.map((e=>"bytes"===e.type&&t?"bytes32":e.type)),a=e.map((e=>"bytes"===e.type&&t?(0,i.keccak256)(e.val):e.val));return i.defaultAbiCoder.encode(n,a)}(l.components.map((t=>({type:t.type,val:e[t.name]}))),t)}t.AddressZero=o.ethers.constants.AddressZero,t.packUserOp=u,t.getUserOpHash=function(e,t,n){const a=(0,i.keccak256)(u(e,!0)),r=i.defaultAbiCoder.encode(["bytes32","address","uint256"],[a,t,n]);return(0,i.keccak256)(r)};const p=(0,i.keccak256)(Buffer.from("Error(string)")).slice(0,10),y=(0,i.keccak256)(Buffer.from("FailedOp(uint256,string)")).slice(0,10);function h(e){if(c("decoding",e),e.startsWith(p)){const[t]=i.defaultAbiCoder.decode(["string"],"0x"+e.substring(10));return{message:t}}if(e.startsWith(y)){let[t,n]=i.defaultAbiCoder.decode(["uint256","string"],"0x"+e.substring(10));return n="FailedOp: ".concat(n),{message:n,opIndex:t}}}function m(e){if("function"!==typeof e)return null==e||"string"===typeof e||"boolean"===typeof e?e:null!=e._isBigNumber||"object"!==typeof e?(0,i.hexlify)(e).replace(/^0x0/,"0x"):Array.isArray(e)?e.map((e=>m(e))):Object.keys(e).reduce(((t,n)=>Object.assign(Object.assign({},t),{[n]:m(e[n])})),{})}t.decodeErrorReason=h,t.rethrowError=function(e){let t=e,n=e;for(null!=(null===t||void 0===t?void 0:t.error)&&(t=t.error);null!=(null===t||void 0===t?void 0:t.data);)n=t,t=t.data;const a="string"===typeof t&&t.length>2?h(t):void 0;if(null!=a&&(e.message=a.message,null!=a.opIndex)){const e=(0,i.hexConcat)([p,i.defaultAbiCoder.encode(["string"],[a.message])]);n.data=e}throw e},t.deepHexlify=m,t.resolveHexlify=async function(e){return m(await(0,i.resolveProperties)(e))}},85664:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.erc4337RuntimeVersion=void 0,t.erc4337RuntimeVersion=n(17803).version},37878:function(e,t,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,r)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),r(n(85664),t),r(n(43704),t)},53800:(e,t,n)=>{"use strict";n.d(t,{g:()=>i,i:()=>r});var a=n(29278);function r(e){const t=new URL(e).hostname;return t.endsWith(".thirdweb.com")||"localhost"===t||"0.0.0.0"===t}function i(e){return(0,a.OZ$)(e).map((e=>{try{const t=new URL(e);return t.hostname.endsWith(".thirdweb.com")&&(t.pathname="",t.search=""),t.toString()}catch(t){return e}}))}},68375:(e,t,n)=>{"use strict";n.d(t,{SmartWalletConnector:()=>R});var a=n(20684),r=n(50884),i=n(30520),s=n(49716),o=n(88062),c=n(65054),d=n(2257),l=n(68408),u=n(9970),p=n(11420),y=n(68624),h=n(97419),m=n(83374),g=n(6222),f=n(53800),w=n(63952),v=n(46170),A=n(37878),P=n(6989),b=n(90824),C=n(1269),T=n(29278);n(13631);const O=()=>{let e=(()=>{const e=BigInt(Math.floor(4294967296*Math.random())),t=BigInt(Math.floor(4294967296*Math.random())),n=BigInt(Math.floor(4294967296*Math.random())),a=BigInt(Math.floor(4294967296*Math.random())),r=BigInt(Math.floor(4294967296*Math.random())),i=BigInt(Math.floor(4294967296*Math.random()));return e<<BigInt(160)|t<<BigInt(128)|n<<BigInt(96)|a<<BigInt(64)|r<<BigInt(32)|i})().toString(16);return e.length%2!==0&&(e="0"+e),e="0x"+e,d.O$.from(s.concat([e,"0x0000000000000000"]))};class x extends r.PaymasterAPI{constructor(e,t,n,a){super(),this.paymasterUrl=e,this.entryPoint=t,this.clientId=n,this.secretKey=a}async getPaymasterAndData(e){const t={"Content-Type":"application/json"};if((0,f.i)(this.paymasterUrl)){if(this.secretKey&&this.clientId)throw new Error("Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.");this.secretKey?t["x-secret-key"]=this.secretKey:this.clientId&&(t["x-client-id"]=this.clientId,"undefined"!==typeof globalThis&&"APP_BUNDLE_ID"in globalThis&&(t["x-bundle-id"]=globalThis.APP_BUNDLE_ID)),"undefined"!==typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"===typeof globalThis.TW_AUTH_TOKEN&&(t.authorization="Bearer ".concat(globalThis.TW_AUTH_TOKEN)),"undefined"!==typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"===typeof globalThis.TW_CLI_AUTH_TOKEN&&(t.authorization="Bearer ".concat(globalThis.TW_CLI_AUTH_TOKEN),t["x-authorize-wallet"]="true")}const n=await fetch(this.paymasterUrl,{method:"POST",headers:t,body:JSON.stringify({jsonrpc:"2.0",id:1,method:"pm_sponsorUserOperation",params:[await(a=e,i.resolveProperties(a).then((e=>Object.keys(e).map((t=>{let n=e[t];return"string"===typeof n&&n.startsWith("0x")||(n=s.hexValue(n)),[t,n]})).reduce(((e,t)=>{let[n,a]=t;return{...e,[n]:a}}),{})))),{entryPoint:this.entryPoint}]})});var a;const r=await n.json();if(!n.ok){const e=r.error||n.statusText,t=r.code||"UNKNOWN";throw new Error("Paymaster error: ".concat(e,"\nStatus: ").concat(n.status,"\nCode: ").concat(t))}if(r.result){return(r.result.paymasterAndData||r.result).toString()}throw new Error("Paymaster returned no result from ".concat(this.paymasterUrl))}}const I=(e,t,n,a)=>new x(e,t,n,a);class k{constructor(e,t,n,a,r,i,s){this.resolve=e,this.reject=t,this.entryPoint=n,this.sender=a,this.userOpHash=r,this.nonce=i,this.timeout=s,(0,v._)(this,"resolved",!1),this.boundLisener=this.listenerCallback.bind(this)}start(){const e=this.entryPoint.filters.UserOperationEvent(this.userOpHash);setTimeout((async()=>{const t=await this.entryPoint.queryFilter(e,-10);t.length>0?this.listenerCallback(t[0]):this.entryPoint.once(e,this.boundLisener)}),100)}stop(){this.entryPoint.off("UserOperationEvent",this.boundLisener)}async listenerCallback(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const a=arguments[arguments.length-1];if(!a.args)return void console.error("got event without args",a);var r;if(a.args.userOpHash!==this.userOpHash)return void console.log("== event with wrong userOpHash: sender/nonce: event.".concat(a.args.sender,"@").concat(a.args.nonce.toString(),"!= userOp.").concat(this.sender,"@").concat(parseInt(null===(r=this.nonce)||void 0===r?void 0:r.toString())));const i=await a.getTransactionReceipt();a.args.success||await this.extractFailureReason(i),this.stop(),this.resolve(i),this.resolved=!0}async extractFailureReason(e){e.status=0;const t=await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash,this.sender),e.blockHash);if(t[0]){let e=t[0].args.revertReason;e.startsWith("0x08c379a0")&&(e=c.$.decode(["string"],"0x"+e.substring(10)).toString()),this.reject(new Error("UserOp failed with reason: ".concat(e)))}}}class S extends l.Signer{constructor(e,t,n,a,r){super(),i.defineReadOnly(this,"provider",n),this.config=e,this.originalSigner=t,this.erc4337provider=n,this.httpRpcClient=a,this.smartAccountAPI=r}async sendTransaction(e,t){var n;const a=await i.resolveProperties(e);await this.verifyAllNecessaryFields(a);const r=O(),s=await this.smartAccountAPI.createSignedUserOp({target:a.to||"",data:(null===(n=a.data)||void 0===n?void 0:n.toString())||"0x",value:a.value,gasLimit:a.gasLimit,nonce:r},t),o=await this.erc4337provider.constructUserOpTransactionResponse(s);try{await this.httpRpcClient.sendUserOpToBundler(s)}catch(c){throw this.unwrapError(c)}return o}unwrapError(e){try{let r="Unknown Error";if(e.error)r="The bundler has failed to include UserOperation in a batch: ".concat(e.error);else if(e.body&&"string"===typeof e.body){var t,n,a;const i=JSON.parse(e.body),s=e.status||"UNKNOWN",o=(null===i||void 0===i?void 0:i.code)||"UNKNOWN";let c=(null===i||void 0===i||null===(t=i.error)||void 0===t?void 0:t.message)||(null===i||void 0===i||null===(n=i.error)||void 0===n?void 0:n.data)||(null===i||void 0===i?void 0:i.error)||e.reason;if(null!==(a=c)&&void 0!==a&&a.includes("FailedOp")){let e="";const t=c.match(/FailedOp\((.*)\)/);if(t){const n=t[1].split(",");e="(paymaster address: ".concat(n[1],")"),c=n[2]}r="The bundler has failed to include UserOperation in a batch: ".concat(c," ").concat(e)}else r="RPC error: ".concat(c,"\nStatus: ").concat(s,"\nCode: ").concat(o)}const i=new Error(r);return i.stack=e.stack,i}catch(r){}return e}async verifyAllNecessaryFields(e){if(!e.to)throw new Error("Missing call target");if(!e.data&&!e.value)throw new Error("Missing call data or value")}connect(e){throw new Error("changing providers is not supported")}async getAddress(){return this.address||(this.address=await this.erc4337provider.getSenderAccountAddress()),this.address}async signMessage(e){if(await this.smartAccountAPI.checkAccountPhantom()){console.log("Account contract not deployed yet. Deploying account before signing message");const e=await this.sendTransaction({to:await this.getAddress(),data:"0x"});await e.wait()}return await this.originalSigner.signMessage(e)}async signTransaction(e,t){var n;const a=await i.resolveProperties(e);await this.verifyAllNecessaryFields(a);const r=O(),s=await this.smartAccountAPI.createSignedUserOp({target:a.to||"",data:(null===(n=a.data)||void 0===n?void 0:n.toString())||"0x",value:a.value,gasLimit:a.gasLimit,nonce:r},t);return JSON.stringify((0,A.deepHexlify)(await i.resolveProperties(s)))}}class F extends u.Zk{constructor(e,t,n,a,r,i,s){super({name:"ERC-4337 Custom Network",chainId:e}),this.chainId=e,this.config=t,this.originalSigner=n,this.originalProvider=a,this.httpRpcClient=r,this.entryPoint=i,this.smartAccountAPI=s,this.signer=new S(t,n,this,r,s)}getSigner(){return this.signer}async perform(e,t){if("sendTransaction"===e||"getTransactionReceipt"===e)throw new Error("Should not get here. Investigate.");if("estimateGas"===e){const{callGasLimit:e}=await this.smartAccountAPI.encodeUserOpCallDataAndGasLimit({target:t.transaction.to,data:t.transaction.data,value:t.transaction.value,gasLimit:t.transaction.gasLimit});return e}return await this.originalProvider.perform(e,t)}async getTransaction(e){return await super.getTransaction(e)}async getTransactionReceipt(e){const t=await e,n=await this.getSenderAccountAddress();return await new Promise(((e,a)=>{new k(e,a,this.entryPoint,n,t).start()}))}async getSenderAccountAddress(){return await this.smartAccountAPI.getAccountAddress()}async waitForTransaction(e,t,n){const a=await this.getSenderAccountAddress();return await new Promise(((t,r)=>{new k(t,r,this.entryPoint,a,e,void 0,n).start()}))}async constructUserOpTransactionResponse(e){const t=await i.resolveProperties(e),n=await this.smartAccountAPI.getUserOpHash(t),a=async()=>await new Promise(((e,a)=>{new k(e,a,this.entryPoint,t.sender,n,t.nonce).start()}));return{hash:n,confirmations:0,from:t.sender,nonce:0,gasLimit:d.O$.from(t.callGasLimit),value:d.O$.from(0),data:s.hexValue(t.callData),chainId:this.chainId,wait:async e=>{const n=await a();return 0!==t.initCode.length&&await this.smartAccountAPI.checkAccountPhantom(),n}}}async detectNetwork(){return this.originalProvider.detectNetwork()}}var U="@thirdweb-dev/wallets",E="2.3.0";class _{constructor(e,t,n,a,r){this.bundlerUrl=e,this.entryPointAddress=t,this.chainId=n;const i={};if((0,f.i)(this.bundlerUrl)){const e="undefined"!==typeof globalThis&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;r?i["x-secret-key"]=r:a&&(i["x-client-id"]=a,e&&(i["x-bundle-id"]=e)),"undefined"!==typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"===typeof globalThis.TW_AUTH_TOKEN&&(i.authorization="Bearer ".concat(globalThis.TW_AUTH_TOKEN)),"undefined"!==typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"===typeof globalThis.TW_CLI_AUTH_TOKEN&&(i.authorization="Bearer ".concat(globalThis.TW_CLI_AUTH_TOKEN),i["x-authorize-wallet"]="true"),i["x-sdk-version"]=E,i["x-sdk-name"]=U,i["x-sdk-platform"]=e?"react-native":void 0!==window.bridge?"webGL":"browser"}this.userOpJsonRpcProvider=new p.r({url:this.bundlerUrl,headers:i},{name:"Connected bundler network",chainId:n}),this.initializing=this.validateChainId()}async validateChainId(){const e=await this.userOpJsonRpcProvider.send("eth_chainId",[]),t=parseInt(e);if(t!==this.chainId)throw new Error("bundler ".concat(this.bundlerUrl," is on chainId ").concat(t,", but provider is on chainId ").concat(this.chainId))}async sendUserOpToBundler(e){await this.initializing;const t=(0,A.deepHexlify)(await i.resolveProperties(e)),n=[t,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",n),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[t,this.entryPointAddress])}async estimateUserOpGas(e){await this.initializing;const t=(0,A.deepHexlify)(await i.resolveProperties(e)),n=[t,this.entryPointAddress];return await this.printUserOperation("eth_estimateUserOperationGas",n),await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[t,this.entryPointAddress])}async printUserOperation(e,t){}}class D{constructor(e){(0,v._)(this,"isPhantom",!0),this.provider=e.provider,this.overheads=e.overheads,this.entryPointAddress=e.entryPointAddress,this.accountAddress=e.accountAddress,this.paymasterAPI=e.paymasterAPI,this.entryPointView=w.EntryPoint__factory.connect(e.entryPointAddress,e.provider).connect(y.d)}async checkAccountPhantom(){if(!this.isPhantom)return this.isPhantom;return(await this.provider.getCode(this.getAccountAddress())).length>2&&(this.isPhantom=!1),this.isPhantom}async getInitCode(){return await this.checkAccountPhantom()?await this.getAccountInitCode():"0x"}async getVerificationGasLimit(){return 1e5}async getPreVerificationGas(e){const t=await i.resolveProperties(e);return(0,r.calcPreVerificationGas)(t,this.overheads)}packUserOp(e){return(0,A.packUserOp)(e,!1)}async encodeUserOpCallDataAndGasLimit(e,t){var n;const a=null!==(n=G(e.value))&&void 0!==n?n:d.O$.from(0),r=t?e.data:await this.prepareExecute(e.target,a,e.data).then((e=>e.encode()));let i;if(await this.checkAccountPhantom()){if(t){i=(await Promise.all(t.targets.map(((e,n)=>this.provider.estimateGas({from:this.getAccountAddress(),to:t.targets[n],data:t.data[n],value:t.values[n]}))))).reduce(((e,t)=>e.add(t)),d.O$.from(0))}else i=await this.provider.estimateGas({from:this.getAccountAddress(),to:e.target,data:e.data,value:e.value});i=i.mul(120).div(100),i.lt(3e4)&&(i=d.O$.from(5e5))}else{var s;i=null!==(s=G(e.gasLimit))&&void 0!==s?s:await this.provider.estimateGas({from:this.entryPointAddress,to:this.getAccountAddress(),data:r,value:e.value})}return{callData:r,callGasLimit:i}}async getUserOpHash(e){const t=await this.provider.getNetwork().then((e=>e.chainId));return async function(e,t,n){const a=await i.resolveProperties(e),r={sender:a.sender,nonce:a.nonce,initCodeHash:o.keccak256(a.initCode),callDataHash:o.keccak256(a.callData),callGasLimit:a.callGasLimit,verificationGasLimit:a.verificationGasLimit,preVerificationGas:a.preVerificationGas,maxFeePerGas:a.maxFeePerGas,maxPriorityFeePerGas:a.maxPriorityFeePerGas,paymasterAndDataHash:o.keccak256(a.paymasterAndData)},s=c.$.encode([{components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"}],[{...r}]),d=o.keccak256(s),l=c.$.encode(["bytes32","address","uint256"],[d,t,n]);return o.keccak256(l)}(e,this.entryPointAddress,t)}async getAccountAddress(){return this.senderAddress||(this.accountAddress?this.senderAddress=this.accountAddress:this.senderAddress=await this.getCounterFactualAddress()),this.senderAddress}async estimateCreationGas(e){if(!e||"0x"===e)return 0;const t=e.substring(0,42),n="0x"+e.substring(42);return await this.provider.estimateGas({to:t,data:n})}async createUnsignedUserOp(e,t){var n;const{callData:a,callGasLimit:o}=await this.encodeUserOpCallDataAndGasLimit(e,t),c=await this.getInitCode(),l=await this.estimateCreationGas(c),u=d.O$.from(await this.getVerificationGasLimit()).add(l);let{maxFeePerGas:p,maxPriorityFeePerGas:y}=e;if(!p||!y){const e=await(0,b.Z)(this.provider);var h;if(!y)y=null!==(h=e.maxPriorityFeePerGas)&&void 0!==h?h:void 0;if(!p){var m,g;p=null!==(m=e.maxFeePerGas)&&void 0!==m?m:void 0,y=null!==(g=e.maxPriorityFeePerGas)&&void 0!==g?g:void 0;const t=(await this.provider.getNetwork()).chainId;t!==T.Lll.chainId&&t!==T.M8s.chainId&&t!==T.m3x.chainId||(y=p)}}let f,w={sender:this.getAccountAddress(),nonce:null!==(n=e.nonce)&&void 0!==n?n:this.getNonce(),initCode:c,callData:a,callGasLimit:o,verificationGasLimit:u,maxFeePerGas:p,maxPriorityFeePerGas:y,paymasterAndData:"0x"};if(this.paymasterAPI){try{await i.resolveProperties(w)}catch(v){}const e={sender:w.sender,nonce:w.nonce,initCode:w.initCode,callData:w.callData,callGasLimit:w.callGasLimit,verificationGasLimit:w.verificationGasLimit,maxFeePerGas:w.maxFeePerGas,maxPriorityFeePerGas:w.maxPriorityFeePerGas,paymasterAndData:"0x0101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000001010101010100000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",signature:s.hexlify(Buffer.alloc(65,1))};w=await i.resolveProperties(e);const t=(0,r.calcPreVerificationGas)(w);w.preVerificationGas=t,f=await this.paymasterAPI.getPaymasterAndData(w),"0x"===f&&(f=void 0)}if(f)return w.paymasterAndData=f,{...w,signature:""};{const e={...w,paymasterAndData:"0x"};return e.preVerificationGas=await this.getPreVerificationGas(e),{...e,signature:""}}}async signUserOp(e){const t=await this.getUserOpHash(e),n=await this.signUserOpHash(t);return{...e,signature:n}}async createSignedUserOp(e,t){return await this.signUserOp(await this.createUnsignedUserOp(e,t))}async getUserOpReceipt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e4,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2e3;const a=Date.now()+t;for(;Date.now()<a;){const t=await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(e));if(t[0])return t[0].transactionHash;await new Promise((e=>setTimeout(e,n)))}return null}}function G(e){return e&&""!==e?d.O$.from(e.toString()):null}class L extends D{constructor(e,t){super({...e,provider:t}),this.params=e,this.sdk=C.T.fromPrivateKey(C.L,e.chain,{clientId:e.clientId,secretKey:e.secretKey})}async getChainId(){return await this.provider.getNetwork().then((e=>e.chainId))}async getAccountContract(){var e;this.accountContract||(null!==(e=this.params.accountInfo)&&void 0!==e&&e.abi?this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),this.params.accountInfo.abi):this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),P.A));return this.accountContract}async getAccountInitCode(){const e=await this.getFactoryContract();console.log("Deploying smart wallet via factory");const t=await this.params.localSigner.getAddress(),n=await this.params.factoryInfo.createAccount(e,t);try{console.log("Cost to deploy smart wallet: ",(await n.estimateGasCost()).ether,"ETH")}catch(a){console.error("Cost to deploy smart wallet: unknown",a)}return s.hexConcat([e.getAddress(),n.encode()])}async getFactoryContract(){var e;return this.factoryContract||(null!==(e=this.params.factoryInfo)&&void 0!==e&&e.abi?this.factoryContract=await this.sdk.getContract(this.params.factoryAddress,this.params.factoryInfo.abi):this.factoryContract=await this.sdk.getContract(this.params.factoryAddress)),this.factoryContract}async getCounterFactualAddress(){if(this.params.accountAddress)return this.params.accountAddress;const e=await this.getFactoryContract(),t=await this.params.localSigner.getAddress();return this.params.factoryInfo.getAccountAddress(e,t)}async getNonce(){if(await this.checkAccountPhantom())return d.O$.from(0);const e=await this.getAccountContract();return this.params.accountInfo.getNonce(e)}async prepareExecute(e,t,n){const a=await this.getAccountContract();return this.params.accountInfo.execute(a,e,t,n)}async prepareExecuteBatch(e,t,n){return(await this.getAccountContract()).prepare("executeBatch",[e,t,n])}async signUserOpHash(e){return await this.params.localSigner.signMessage(s.arrayify(e))}async isAcountDeployed(){return!await this.checkAccountPhantom()}}class R extends a.C{constructor(e){super(),this.config=e}async initialize(e){const t=this.config,n=(0,b.b2)(t.chain,{clientId:t.clientId,secretKey:t.secretKey});this.chainId=(await n.getNetwork()).chainId;const a=this.config.bundlerUrl||"https://".concat(this.chainId,".bundler.thirdweb.com"),r=this.config.paymasterUrl||"https://".concat(this.chainId,".bundler.thirdweb.com"),i=t.entryPointAddress||P.E,s=await e.personalWallet.getSigner(),o={chain:t.chain,localSigner:s,entryPointAddress:i,bundlerUrl:a,paymasterAPI:this.config.gasless?this.config.paymasterAPI?this.config.paymasterAPI:I(r,i,this.config.clientId,this.config.secretKey):void 0,factoryAddress:t.factoryAddress,accountAddress:e.accountAddress,factoryInfo:t.factoryInfo||this.defaultFactoryInfo(),accountInfo:t.accountInfo||this.defaultAccountInfo(),clientId:t.clientId,secretKey:t.secretKey};this.personalWallet=e.personalWallet;const c=new L(o,n);this.aaProvider=function(e,t,n,a){const r=w.EntryPoint__factory.connect(e.entryPointAddress,n),i=new _(e.bundlerUrl,e.entryPointAddress,a,e.clientId,e.secretKey);return new F(a,e,e.localSigner,n,i,r,t)}(o,c,n,this.chainId),this.accountApi=c}async connect(e){return await this.initialize(e),await this.getAddress()}getProvider(){if(!this.aaProvider)throw new Error("Personal wallet not connected");return Promise.resolve(this.aaProvider)}async getSigner(){if(!this.aaProvider)throw new Error("Personal wallet not connected");return Promise.resolve(this.aaProvider.getSigner())}async getAddress(){return(await this.getSigner()).getAddress()}async isConnected(){try{return!!await this.getAddress()}catch(e){return!1}}async disconnect(){this.personalWallet=void 0,this.aaProvider=void 0}async switchChain(e){const t=await this.getProvider();if((await t.getNetwork()).chainId!==e)throw new Error("Not supported.")}setupListeners(){return Promise.resolve()}updateChains(e){}async hasPermissionToExecute(e){var t;const n=await this.getAccountContract(),a=await this.getSigner(),r=await a.getAddress(),i=null===(t=(await n.account.getAllSigners()).filter((e=>h.getAddress(e.signer)===h.getAddress(r)))[0])||void 0===t?void 0:t.permissions;return!!i&&i.approvedCallTargets.includes(e.getTarget())}async send(e){return(await this.getSigner()).sendTransaction({to:e.getTarget(),data:e.encode(),value:await e.getValue()})}async execute(e){const t=await this.send(e);return{receipt:await t.wait()}}async sendBatch(e){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=await this.getSigner(),{tx:n,batchData:a}=await this.prepareBatchTx(e);return await t.sendTransaction({to:await t.getAddress(),data:n.encode(),value:0},a)}async executeBatch(e){const t=await this.sendBatch(e);return{receipt:await t.wait()}}async sendRaw(e){if(!this.accountApi)throw new Error("Personal wallet not connected");return(await this.getSigner()).sendTransaction(e)}async executeRaw(e){const t=await this.sendRaw(e);return{receipt:await t.wait()}}async sendBatchRaw(e){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=await this.getSigner(),n=await this.prepareBatchRaw(e);return t.sendTransaction({to:await t.getAddress(),data:n.tx.encode(),value:0},n.batchData)}async executeBatchRaw(e){const t=await this.sendBatchRaw(e);return{receipt:await t.wait()}}async estimate(e){if(!this.accountApi)throw new Error("Personal wallet not connected");return this.estimateTx({target:e.getTarget(),data:e.encode(),value:await e.getValue()})}async estimateRaw(e){var t;if(!this.accountApi)throw new Error("Personal wallet not connected");const n=await i.resolveProperties(e);return this.estimateTx({target:n.to||A.AddressZero,data:(null===(t=n.data)||void 0===t?void 0:t.toString())||"",value:n.value||d.O$.from(0)})}async estimateBatch(e){if(!this.accountApi)throw new Error("Personal wallet not connected");const{tx:t,batchData:n}=await this.prepareBatchTx(e);return this.estimateTx({target:t.getTarget(),data:t.encode(),value:await t.getValue()},n)}async estimateBatchRaw(e){if(!this.accountApi)throw new Error("Personal wallet not connected");const{tx:t,batchData:n}=await this.prepareBatchRaw(e);return this.estimateTx({target:t.getTarget(),data:t.encode(),value:await t.getValue()},n)}async deploy(){if(!this.accountApi)throw new Error("Personal wallet not connected");const e=await this.getSigner(),t=await e.sendTransaction({to:await e.getAddress(),data:"0x"},{targets:[],data:[],values:[]});return{receipt:await t.wait()}}async isDeployed(){if(!this.accountApi)throw new Error("Personal wallet not connected");return await this.accountApi.isAcountDeployed()}async deployIfNeeded(){await this.isDeployed()||await this.deploy()}async grantPermissions(e,t){await this.deployIfNeeded();return(await this.getAccountContract()).account.grantPermissions(e,t)}async revokePermissions(e){await this.deployIfNeeded();return(await this.getAccountContract()).account.revokeAccess(e)}async addAdmin(e){await this.deployIfNeeded();return(await this.getAccountContract()).account.grantAdminPermissions(e)}async removeAdmin(e){await this.deployIfNeeded();return(await this.getAccountContract()).account.revokeAdminPermissions(e)}async getAllActiveSigners(){if(await this.isDeployed()){return(await this.getAccountContract()).account.getAllAdminsAndSigners()}{var e;const t=await(null===(e=this.personalWallet)||void 0===e?void 0:e.getSigner());if(!t)throw new Error("Personal wallet not connected");return[{isAdmin:!0,signer:await t.getAddress(),permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:d.O$.from(0),approvedCallTargets:[]}}]}}async getAccountContract(){var e;if(!await this.isDeployed())throw new Error("Account contract is not deployed yet. You can deploy it manually using SmartWallet.deploy(), or by executing a transaction from this wallet.");const t=C.T.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return null!==(e=this.config.accountInfo)&&void 0!==e&&e.abi?t.getContract(await this.getAddress(),this.config.accountInfo.abi):t.getContract(await this.getAddress())}async getFactoryContract(){var e;const t=C.T.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return null!==(e=this.config.factoryInfo)&&void 0!==e&&e.abi?t.getContract(this.config.factoryAddress,this.config.factoryInfo.abi):t.getContract(this.config.factoryAddress)}defaultFactoryInfo(){return{createAccount:async(e,t)=>e.prepare("createAccount",[t,m.Y0("")]),getAccountAddress:async(e,t)=>await e.call("getAddress",[t,m.Y0("")])}}defaultAccountInfo(){return{execute:async(e,t,n,a)=>e.prepare("execute",[t,n,a]),getNonce:async e=>e.call("getNonce",[])}}async estimateTx(e,t){if(!this.accountApi)throw new Error("Personal wallet not connected");let n=d.O$.from(0);const[a,r]=await Promise.all([this.getProvider(),this.isDeployed()]);r||(n=await this.estimateDeploymentGasLimit());const[{callGasLimit:i},s]=await Promise.all([this.accountApi.encodeUserOpCallDataAndGasLimit(e,t),(0,b._)(a)]),o=i.mul(s),c=n.mul(s),l=c.add(o);return{ether:g.formatEther(l),wei:l,details:{deployGasLimit:n,transactionGasLimit:i,gasPrice:s,transactionCost:o,deployCost:c,totalCost:l}}}async estimateDeploymentGasLimit(){if(!this.accountApi)throw new Error("Personal wallet not connected");const e=await this.accountApi.getInitCode(),[t,n]=await Promise.all([this.accountApi.estimateCreationGas(e),this.accountApi.getVerificationGasLimit()]);return d.O$.from(n).add(t)}async prepareBatchRaw(e){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=await Promise.all(e.map((e=>i.resolveProperties(e)))),n=t.map((e=>e.to||A.AddressZero)),a=t.map((e=>e.data||"0x")),r=t.map((e=>e.value||d.O$.from(0)));return{tx:await this.accountApi.prepareExecuteBatch(n,r,a),batchData:{targets:n,data:a,values:r}}}async prepareBatchTx(e){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=e.map((e=>e.getTarget())),n=e.map((e=>e.encode())),a=await Promise.all(e.map((e=>e.getValue())));return{tx:await this.accountApi.prepareExecuteBatch(t,a,n),batchData:{targets:t,data:n,values:a}}}}},18392:(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let a=0,r=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(a++,"%c"===e&&(r=a))})),t.splice(r,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(n){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(n){}!e&&"undefined"!==typeof process&&"env"in process&&(e={NODE_ENV:"production",PUBLIC_URL:"/Soulbound-Token",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.DEBUG);return e},t.useColors=function(){if("undefined"!==typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!==typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!==typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(18472)(t);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}},18472:(e,t,n)=>{e.exports=function(e){function t(e){let n,r,i,s=null;function o(){for(var e=arguments.length,a=new Array(e),r=0;r<e;r++)a[r]=arguments[r];if(!o.enabled)return;const i=o,s=Number(new Date),c=s-(n||s);i.diff=c,i.prev=n,i.curr=s,n=s,a[0]=t.coerce(a[0]),"string"!==typeof a[0]&&a.unshift("%O");let d=0;a[0]=a[0].replace(/%([a-zA-Z%])/g,((e,n)=>{if("%%"===e)return"%";d++;const r=t.formatters[n];if("function"===typeof r){const t=a[d];e=r.call(i,t),a.splice(d,1),d--}return e})),t.formatArgs.call(i,a);(i.log||t.log).apply(i,a)}return o.namespace=e,o.useColors=t.useColors(),o.color=t.selectColor(e),o.extend=a,o.destroy=t.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==s?s:(r!==t.namespaces&&(r=t.namespaces,i=t.enabled(e)),i),set:e=>{s=e}}),"function"===typeof t.init&&t.init(o),o}function a(e,n){const a=t(this.namespace+("undefined"===typeof n?":":n)+e);return a.log=this.log,a}function r(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(r),...t.skips.map(r).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const a=("string"===typeof e?e:"").split(/[\s,]+/),r=a.length;for(n=0;n<r;n++)a[n]&&("-"===(e=a[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(78193),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},78193:e=>{var t=1e3,n=60*t,a=60*n,r=24*a,i=7*r,s=365.25*r;function o(e,t,n,a){var r=t>=1.5*n;return Math.round(e/n)+" "+a+(r?"s":"")}e.exports=function(e,c){c=c||{};var d=typeof e;if("string"===d&&e.length>0)return function(e){if((e=String(e)).length>100)return;var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!o)return;var c=parseFloat(o[1]);switch((o[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return c*s;case"weeks":case"week":case"w":return c*i;case"days":case"day":case"d":return c*r;case"hours":case"hour":case"hrs":case"hr":case"h":return c*a;case"minutes":case"minute":case"mins":case"min":case"m":return c*n;case"seconds":case"second":case"secs":case"sec":case"s":return c*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return}}(e);if("number"===d&&isFinite(e))return c.long?function(e){var i=Math.abs(e);if(i>=r)return o(e,i,r,"day");if(i>=a)return o(e,i,a,"hour");if(i>=n)return o(e,i,n,"minute");if(i>=t)return o(e,i,t,"second");return e+" ms"}(e):function(e){var i=Math.abs(e);if(i>=r)return Math.round(e/r)+"d";if(i>=a)return Math.round(e/a)+"h";if(i>=n)return Math.round(e/n)+"m";if(i>=t)return Math.round(e/t)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},79154:e=>{"use strict";e.exports=JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"IEntryPoint","sourceName":"contracts/interfaces/IEntryPoint.sol","abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}}')},17803:e=>{"use strict";e.exports={version:"0.5.0"}}}]);
//# sourceMappingURL=8375.68e3dd00.chunk.js.map