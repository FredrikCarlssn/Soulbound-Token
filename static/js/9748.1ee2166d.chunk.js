"use strict";(self.webpackChunkreact_frontend=self.webpackChunkreact_frontend||[]).push([[9748],{23425:(t,r,e)=>{e.d(r,{D:()=>f,F:()=>d,I:()=>s,a:()=>c,b:()=>u,c:()=>l,f:()=>p,g:()=>h,u:()=>g});var a=e(470),i=e(49716),n=e(2257),o=e(34029);const s=(()=>i.arrayify("0x80ac58cd"))(),c=(()=>i.arrayify("0xd9b67a26"))(),d={name:"Failed to load NFT metadata"};async function p(t,r,e){if(r.startsWith("data:application/json;base64")&&"undefined"!==typeof Buffer){const e=r.split(",")[1],i=JSON.parse(Buffer.from(e,"base64").toString("utf-8"));return a.C.parse({...i,id:n.O$.from(t).toString(),uri:r})}const o=r.replace("{id}",i.hexZeroPad(n.O$.from(t).toHexString(),32).slice(2));let s;try{s=await e.downloadJSON(o)}catch(c){const a=r.replace("{id}",n.O$.from(t).toString());try{s=await e.downloadJSON(a)}catch(p){console.warn("failed to get token metadata: ".concat(JSON.stringify({tokenId:t.toString(),tokenUri:r})," -- falling back to default metadata")),s=d}}return a.C.parse({...s,id:n.O$.from(t).toString(),uri:r})}async function l(t,r,i,l){let u;const g=(await e.e(5025).then(e.t.bind(e,25025,19))).default,h=new o.CH(t,g,r),[f,w]=await Promise.all([h.supportsInterface(s),h.supportsInterface(c)]);if(f){const a=(await Promise.resolve().then(e.t.bind(e,34161,19))).default,n=new o.CH(t,a,r);u=await n.tokenURI(i)}else{if(!w)throw Error("Contract must implement ERC 1155 or ERC 721.");{const a=(await Promise.resolve().then(e.t.bind(e,50266,19))).default,n=new o.CH(t,a,r);u=await n.uri(i)}}return u?p(i,u,l):a.C.parse({...d,id:n.O$.from(i).toString(),uri:""})}async function u(t,r){return"string"===typeof t?t:await r.upload(a.a.parse(t))}async function g(t,r,e,i){if(function(t){return void 0===t.find((t=>"string"!==typeof t))}(t))return t;if(function(t){return void 0===t.find((t=>"object"!==typeof t))}(t)){return await r.uploadBatch(t.map((t=>a.a.parse(t))),{rewriteFileNames:{fileStartNumber:e||0},onProgress:null===i||void 0===i?void 0:i.onProgress})}throw new Error("NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)")}function h(t){const r=t[0].substring(0,t[0].lastIndexOf("/"));for(let e=0;e<t.length;e++){const a=t[e].substring(0,t[e].lastIndexOf("/"));if(r!==a)throw new Error("Can only create batches with the same base URI for every entry in the batch. Expected '".concat(r,"' but got '").concat(a,"'"))}return r.replace(/\/$/,"")+"/"}const f=100},95838:(t,r,e)=>{e.d(r,{c:()=>n});var a=e(90824),i=e(12083);function n(t){return(0,i.i)(t)?a.aZ:t}},88249:(t,r,e)=>{e.d(r,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},22974:(t,r,e)=>{e.d(r,{C:()=>o});var a=e(64572),i=e(67685),n=e(90824);class o{constructor(t){(0,a.Z)(this,"featureName",n.dn.name),(0,a.Z)(this,"set",(0,i.c)((async t=>{const r=await n.bJ.parseAsync(t);return i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})}))),this.contractWrapper=t}async get(){const[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return n.bJ.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}}},49748:(t,r,e)=>{e.r(r),e.d(r,{Marketplace:()=>k});var a=e(64572),i=e(2257),n=e(68624),o=e(44554),s=e(23425),c=e(12083),d=e(90824),p=e(17928),l=e(67685),u=e(14026),g=e(88249),h=e(22974),f=e(60788),w=e(75422),m=e(97419),y=e(34029),v=e(6222),W=e(95838),A=e(14558),C=e(470);let P=function(t){return t[t.Direct=0]="Direct",t[t.Auction=1]="Auction",t}({});class T{constructor(t,r){(0,a.Z)(this,"createListing",(0,l.c)((async t=>{(0,p.v)(t);const r=await(0,d.aP)(t.assetContractAddress),e=await(0,d.aP)(t.currencyContractAddress);await(0,p.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const a=await(0,A.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e);let n=Math.floor(t.startTimestamp.getTime()/1e3);const o=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return n<o&&(n=o),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:a,currencyToAccept:(0,W.c)(e),listingType:P.Direct,quantityToList:t.quantity,reservePricePerToken:a,secondsUntilEndTime:t.listingDurationInSeconds,startTime:i.O$.from(n)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",null===t||void 0===t?void 0:t.logs)[0].args.listingId,receipt:t})})}))),(0,a.Z)(this,"createListingsBatch",(0,l.c)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode()));return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",null===t||void 0===t?void 0:t.logs).map((r=>({id:r.args.listingId,receipt:t})))})}))),(0,a.Z)(this,"makeOffer",(0,l.c)((async(t,r,e,a,n)=>{if((0,c.i)(e))throw new Error("You must use the wrapped native token address when making an offer with a native token");const o=await(0,A.n)(this.contractWrapper.getProvider(),a,e);try{await this.getListing(t)}catch(g){throw console.error("Failed to get listing, err =",g),new Error("Error getting the listing with id ".concat(t))}const s=i.O$.from(r),d=i.O$.from(o).mul(s),p=await this.contractWrapper.getCallOverrides()||{};await(0,C.s)(this.contractWrapper,d,e,p);let u=w.Bz;return n&&(u=i.O$.from(Math.floor(n.getTime()/1e3))),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,r,e,o,u],overrides:p})}))),(0,a.Z)(this,"acceptOffer",(0,l.c)((async(t,r)=>{await this.validateListing(i.O$.from(t));const e=await(0,d.aP)(r),a=await this.contractWrapper.read("offers",[t,e]);return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[t,e,a.currency,a.pricePerToken]})}))),(0,a.Z)(this,"buyoutListing",(0,l.c)((async(t,r,e)=>{const a=await this.validateListing(i.O$.from(t)),{valid:n,error:o}=await this.isStillValidListing(a,r);if(!n)throw new Error("Listing ".concat(t," is no longer valid. ").concat(o));const s=e||await this.contractWrapper.getSignerAddress(),c=i.O$.from(r),d=i.O$.from(a.buyoutPrice).mul(c),p=await this.contractWrapper.getCallOverrides()||{};return await(0,C.s)(this.contractWrapper,d,a.currencyContractAddress,p),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buy",args:[t,s,c,a.currencyContractAddress,d],overrides:p})}))),(0,a.Z)(this,"updateListing",(0,l.c)((async t=>l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.buyoutPrice,t.buyoutPrice,await(0,d.aP)(t.currencyContractAddress),t.startTimeInSeconds,t.secondsUntilEnd]})))),(0,a.Z)(this,"cancelListing",(0,l.c)((async t=>l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelDirectListing",args:[t]})))),this.contractWrapper=t,this.storage=r}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===n.d)throw new d.L(this.getAddress(),t.toString());if(r.listingType!==P.Direct)throw new d.W(this.getAddress(),t.toString(),"Auction","Direct");return await this.mapListing(r)}async getActiveOffer(t,r){await this.validateListing(i.O$.from(t)),(0,o.Z)(m.isAddress(r),"Address must be a valid address");const e=await this.contractWrapper.read("offers",[t,await(0,d.aP)(r)]);if(e.offeror!==n.d)return await(0,p.m)(this.contractWrapper.getProvider(),i.O$.from(t),e)}async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error("Error getting the listing with id ".concat(t)),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:i.O$.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,c.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInSeconds:t.startTime,asset:await(0,s.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),secondsUntilEnd:t.endTime,sellerAddress:t.tokenOwner,type:P.Direct}}async isStillValidListing(t,r){if(!await(0,p.i)(this.contractWrapper.getProvider(),this.getAddress(),t.assetContractAddress,t.tokenId,t.sellerAddress))return{valid:!1,error:"Token '".concat(t.tokenId,"' from contract '").concat(t.assetContractAddress,"' is not approved for transfer")};const a=this.contractWrapper.getProvider(),i=(await e.e(5025).then(e.t.bind(e,25025,19))).default,n=new y.CH(t.assetContractAddress,i,a),o=await n.supportsInterface(s.I),c=await n.supportsInterface(s.a);if(o){var d;const r=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,i=new y.CH(t.assetContractAddress,r,a);let n;try{n=await i.ownerOf(t.tokenId)}catch(l){}const o=(null===(d=n)||void 0===d?void 0:d.toLowerCase())===t.sellerAddress.toLowerCase();return{valid:o,error:o?void 0:"Seller is not the owner of Token '".concat(t.tokenId,"' from contract '").concat(t.assetContractAddress," anymore'")}}if(c){const i=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,n=new y.CH(t.assetContractAddress,i,a),o=(await n.balanceOf(t.sellerAddress,t.tokenId)).gte(r||t.quantity);return{valid:o,error:o?void 0:"Seller does not have enough balance of Token '".concat(t.tokenId,"' from contract '").concat(t.assetContractAddress," to fulfill the listing")}}return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."}}}class b{constructor(t,r){(0,a.Z)(this,"createListing",(0,l.c)((async t=>{(0,p.v)(t);const r=await(0,d.aP)(t.assetContractAddress),e=await(0,d.aP)(t.currencyContractAddress);await(0,p.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const a=await(0,A.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e),n=await(0,A.n)(this.contractWrapper.getProvider(),t.reservePricePerToken,e);let o=Math.floor(t.startTimestamp.getTime()/1e3);const s=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return o<s&&(o=s),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:a,currencyToAccept:(0,W.c)(e),listingType:P.Auction,quantityToList:t.quantity,reservePricePerToken:n,secondsUntilEndTime:t.listingDurationInSeconds,startTime:i.O$.from(o)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",null===t||void 0===t?void 0:t.logs)[0].args.listingId,receipt:t})})}))),(0,a.Z)(this,"createListingsBatch",(0,l.c)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode()));return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",null===t||void 0===t?void 0:t.logs).map((r=>({id:r.args.listingId,receipt:t})))})}))),(0,a.Z)(this,"buyoutListing",(0,l.c)((async t=>{const r=await this.validateListing(i.O$.from(t)),e=await(0,c.f)(this.contractWrapper.getProvider(),r.currencyContractAddress);return this.makeBid.prepare(t,v.formatUnits(r.buyoutPrice,e.decimals))}))),(0,a.Z)(this,"makeBid",(0,l.c)((async(t,r)=>{const e=await this.validateListing(i.O$.from(t)),a=await(0,A.n)(this.contractWrapper.getProvider(),r,e.currencyContractAddress);if(a.eq(i.O$.from(0)))throw new Error("Cannot make a bid with 0 value");const n=await this.contractWrapper.read("bidBufferBps",[]),s=await this.getWinningBid(t);if(s){const t=(0,p.a)(s.pricePerToken,a,n);(0,o.Z)(t,"Bid price is too low based on the current winning bid and the bid buffer")}else{const t=a,r=i.O$.from(e.reservePrice);(0,o.Z)(t.gte(r),"Bid price is too low based on reserve price")}const c=i.O$.from(e.quantity),d=a.mul(c),u=await this.contractWrapper.getCallOverrides()||{};return await(0,C.s)(this.contractWrapper,d,e.currencyContractAddress,u),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,e.quantity,e.currencyContractAddress,a,w.Bz],overrides:u})}))),(0,a.Z)(this,"cancelListing",(0,l.c)((async t=>{const r=await this.validateListing(i.O$.from(t)),e=i.O$.from(Math.floor(Date.now()/1e3)),a=i.O$.from(r.startTimeInEpochSeconds),o=await this.contractWrapper.read("winningBid",[t]);if(e.gt(a)&&o.offeror!==n.d)throw new d.t(t.toString());return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[i.O$.from(t),await this.contractWrapper.getSignerAddress()]})}))),(0,a.Z)(this,"closeListing",(0,l.c)((async(t,r)=>{r||(r=await this.contractWrapper.getSignerAddress());const e=await this.validateListing(i.O$.from(t));try{return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[i.O$.from(t),r]})}catch(a){throw a.message.includes("cannot close auction before it has ended")?new d.w(t.toString(),e.endTimeInEpochSeconds.toString()):a}}))),(0,a.Z)(this,"executeSale",(0,l.c)((async t=>{const r=await this.validateListing(i.O$.from(t));try{const e=await this.getWinningBid(t);(0,o.Z)(e,"No winning bid found");const a=this.encoder.encode("closeAuction",[t,r.sellerAddress]),i=this.encoder.encode("closeAuction",[t,e.buyerAddress]);return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[a,i]})}catch(e){throw e.message.includes("cannot close auction before it has ended")?new d.w(t.toString(),r.endTimeInEpochSeconds.toString()):e}}))),(0,a.Z)(this,"updateListing",(0,l.c)((async t=>l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.reservePrice,t.buyoutPrice,t.currencyContractAddress,t.startTimeInEpochSeconds,t.endTimeInEpochSeconds]})))),this.contractWrapper=t,this.storage=r,this.encoder=new c.C(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.listingId.toString()!==t.toString())throw new d.L(this.getAddress(),t.toString());if(r.listingType!==P.Auction)throw new d.W(this.getAddress(),t.toString(),"Direct","Auction");return await this.mapListing(r)}async getWinningBid(t){await this.validateListing(i.O$.from(t));const r=await this.contractWrapper.read("winningBid",[t]);if(r.offeror!==n.d)return await(0,p.m)(this.contractWrapper.getProvider(),i.O$.from(t),r)}async getWinner(t){const r=await this.validateListing(i.O$.from(t)),e=await this.contractWrapper.read("winningBid",[t]),a=i.O$.from(Math.floor(Date.now()/1e3)),o=i.O$.from(r.endTimeInEpochSeconds);if(a.gt(o)&&e.offeror!==n.d)return e.offeror;const s=new u.a(this.contractWrapper),c=(await s.getEvents("AuctionClosed")).find((r=>r.data.listingId.eq(i.O$.from(t))));if(!c)throw new Error("Could not find auction with listingId ".concat(t," in closed auctions"));return c.data.winningBidder}async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getMinimumNextBid(t){const[r,e,a]=await Promise.all([this.getBidBufferBps(),this.getWinningBid(t),this.validateListing(i.O$.from(t))]),n=e?e.currencyValue.value:a.reservePrice,o=n.add(n.mul(r).div(1e4));return(0,c.a)(this.contractWrapper.getProvider(),a.currencyContractAddress,o)}async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error("Error getting the listing with id ".concat(t)),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:i.O$.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,c.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInEpochSeconds:t.startTime,asset:await(0,s.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),reservePriceCurrencyValuePerToken:await(0,c.a)(this.contractWrapper.getProvider(),t.currency,t.reservePricePerToken),reservePrice:i.O$.from(t.reservePricePerToken),endTimeInEpochSeconds:t.endTime,sellerAddress:t.tokenOwner,type:P.Auction}}}e(80518),e(66315),e(13631);class k{get chainId(){return this._chainId}constructor(t,r,e){(0,a.Z)(this,"getAll",this.getAllListings),(0,a.Z)(this,"buyoutListing",(0,l.c)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new d.L(this.getAddress(),t.toString());switch(a.listingType){case P.Direct:return(0,o.Z)(void 0!==r,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing.prepare(t,r,e);case P.Auction:return await this.auction.buyoutListing.prepare(t);default:throw Error("Unknown listing type: ".concat(a.listingType))}}))),(0,a.Z)(this,"makeOffer",(0,l.c)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new d.L(this.getAddress(),t.toString());const i=await this.contractWrapper.getChainID();switch(a.listingType){case P.Direct:return(0,o.Z)(e,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer.prepare(t,e,(0,c.i)(a.currency)?d.a_[i].wrapped.address:a.currency,r);case P.Auction:return await this.auction.makeBid.prepare(t,r);default:throw Error("Unknown listing type: ".concat(a.listingType))}}))),(0,a.Z)(this,"setBidBufferBps",(0,l.c)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getTimeBufferInSeconds();return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[r,i.O$.from(t)]})}))),(0,a.Z)(this,"setTimeBufferInSeconds",(0,l.c)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getBidBufferBps();return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[i.O$.from(t),r]})}))),(0,a.Z)(this,"allowListingFromSpecificAssetOnly",(0,l.c)((async t=>{const r=[];return(await this.roles.get("asset")).includes(n.d)&&r.push(this.encoder.encode("revokeRole",[(0,d.H)("asset"),n.d])),r.push(this.encoder.encode("grantRole",[(0,d.H)("asset"),t])),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r]})}))),(0,a.Z)(this,"allowListingFromAnyAsset",(0,l.c)((async()=>{const t=[],r=await this.roles.get("asset");for(const e in r)t.push(this.encoder.encode("revokeRole",[(0,d.H)("asset"),e]));return t.push(this.encoder.encode("grantRole",[(0,d.H)("asset"),n.d])),l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[t]})})));let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,w=arguments.length>5?arguments[5]:void 0,m=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new d.cu(t,r,p,s,e);this._chainId=w,this.abi=d.bn.parse(p||[]),this.contractWrapper=m,this.storage=e,this.metadata=new u.C(this.contractWrapper,d.c1,this.storage),this.app=new u.b(this.contractWrapper,this.metadata,this.storage),this.roles=new f.C(this.contractWrapper,k.contractRoles),this.encoder=new c.C(this.contractWrapper),this.estimator=new u.G(this.contractWrapper),this.direct=new T(this.contractWrapper,this.storage),this.auction=new b(this.contractWrapper,this.storage),this.events=new u.a(this.contractWrapper),this.platformFees=new h.C(this.contractWrapper),this.interceptor=new g.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===n.d)throw new d.L(this.getAddress(),t.toString());switch(r.listingType){case P.Auction:return await this.auction.mapListing(r);case P.Direct:return await this.direct.mapListing(r);default:throw new Error("Unknown listing type: ".concat(r.listingType))}}async getActiveListings(t){const r=await this.getAllListingsNoFilter(!0),e=this.applyFilter(r,t),a=i.O$.from(Math.floor(Date.now()/1e3));return e.filter((t=>t.type===P.Auction&&i.O$.from(t.endTimeInEpochSeconds).gt(a)&&i.O$.from(t.startTimeInEpochSeconds).lte(a)||t.type===P.Direct&&i.O$.from(t.quantity).gt(0)))}async getAllListings(t){const r=await this.getAllListingsNoFilter(!1);return this.applyFilter(r,t)}async getTotalCount(){return await this.contractWrapper.read("totalListings",[])}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.read("hasRole",[(0,d.H)("lister"),n.d])}async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getTimeBufferInSeconds(){return this.contractWrapper.read("timeBuffer",[])}async getOffers(t){const r=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:t}});return await Promise.all(r.map((r=>(0,p.m)(this.contractWrapper.getProvider(),i.O$.from(t),{quantityWanted:r.data.quantityWanted,pricePerToken:r.data.quantityWanted.gt(0)?r.data.totalOfferAmount.div(r.data.quantityWanted):r.data.totalOfferAmount,currency:r.data.currency,offeror:r.data.offeror}))))}async getAllListingsNoFilter(t){return(await Promise.all(Array.from(Array((await this.contractWrapper.read("totalListings",[])).toNumber()).keys()).map((async r=>{let e;try{e=await this.getListing(r)}catch(a){return a instanceof d.L?void 0:void console.warn("Failed to get listing ".concat(r,"' - skipping. Try 'marketplace.getListing(").concat(r,")' to get the underlying error."))}if(e.type===P.Auction)return e;if(t){const{valid:t}=await this.direct.isStillValidListing(e);if(!t)return}return e})))).filter((t=>void 0!==t))}applyFilter(t,r){let e=[...t];const a=i.O$.from((null===r||void 0===r?void 0:r.start)||0).toNumber(),n=i.O$.from((null===r||void 0===r?void 0:r.count)||s.D).toNumber();return r&&(r.seller&&(e=e.filter((t=>{var e;return t.sellerAddress.toString().toLowerCase()===(null===r||void 0===r||null===(e=r.seller)||void 0===e?void 0:e.toString().toLowerCase())}))),r.tokenContract&&(e=e.filter((t=>{var e;return t.assetContractAddress.toString().toLowerCase()===(null===r||void 0===r||null===(e=r.tokenContract)||void 0===e?void 0:e.toString().toLowerCase())}))),void 0!==r.tokenId&&(e=e.filter((t=>{var e;return t.tokenId.toString()===(null===r||void 0===r||null===(e=r.tokenId)||void 0===e?void 0:e.toString())}))),e=e.filter(((t,r)=>r>=a)),e=e.slice(0,n)),e}async prepare(t,r,e){return l.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}(0,a.Z)(k,"contractRoles",d.dA)},17928:(t,r,e)=>{e.d(r,{a:()=>g,g:()=>h,h:()=>p,i:()=>d,m:()=>u,v:()=>l});var a=e(34029),i=e(2257),n=e(44554),o=e(23425),s=e(90824),c=e(12083);async function d(t,r,i,n,s){try{const p=(await e.e(5025).then(e.t.bind(e,25025,19))).default,l=new a.CH(i,p,t),[u,g]=await Promise.all([l.supportsInterface(o.I),l.supportsInterface(o.a)]);if(u){var c;const o=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,p=new a.CH(i,o,t);if(await p.isApprovedForAll(s,r))return!0;let l;try{l=await p.getApproved(n)}catch(d){}return(null===(c=l)||void 0===c?void 0:c.toLowerCase())===r.toLowerCase()}if(g){const n=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,o=new a.CH(i,n,t);return await o.isApprovedForAll(s,r)}return console.error("Contract does not implement ERC 1155 or ERC 721."),!1}catch(p){return console.error("Failed to check if token is approved",p),!1}}async function p(t,r,a,i,n){const c=(await e.e(5025).then(e.t.bind(e,25025,19))).default,d=new s.cu(t.getSignerOrProvider(),a,c,t.options,t.storage),[p,l]=await Promise.all([d.read("supportsInterface",[o.I]),d.read("supportsInterface",[o.a])]);if(p){const o=(await Promise.resolve().then(e.t.bind(e,70332,19))).default,c=new s.cu(t.getSignerOrProvider(),a,o,t.options,t.storage);if(!await c.read("isApprovedForAll",[n,r])){(await c.read("getApproved",[i])).toLowerCase()===r.toLowerCase()||await c.sendTransaction("setApprovalForAll",[r,!0])}}else{if(!l)throw Error("Contract must implement ERC 1155 or ERC 721.");{const i=(await Promise.resolve().then(e.t.bind(e,8455,19))).default,o=new s.cu(t.getSignerOrProvider(),a,i,t.options,t.storage);await o.read("isApprovedForAll",[n,r])||await o.sendTransaction("setApprovalForAll",[r,!0])}}}function l(t){if((0,n.Z)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,n.Z)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,n.Z)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,n.Z)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,n.Z)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,n.Z)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type)(0,n.Z)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function u(t,r,e){return{quantity:e.quantityDesired,pricePerToken:e.pricePerToken,currencyContractAddress:e.currency,buyerAddress:e.offeror,quantityDesired:e.quantityWanted,currencyValue:await(0,c.a)(t,e.currency,e.quantityWanted.mul(e.pricePerToken)),listingId:r}}function g(t,r,e){if(e=i.O$.from(e),t=i.O$.from(t),r=i.O$.from(r),t.eq(i.O$.from(0)))return!1;return r.sub(t).mul(s.dy).div(t).gte(e)}async function h(t,r,e){const a=[];for(;r-t>o.D;)a.push(e(t,t+o.D-1)),t+=o.D;return a.push(e(t,r-1)),await Promise.all(a)}},470:(t,r,e)=>{e.d(r,{B:()=>c,C:()=>l,N:()=>p,a:()=>d,s:()=>u});var a=e(90824),i=e(60874),n=e(12083);const o=(()=>i.z.object({}).catchall(i.z.union([a.cA,i.z.unknown()])))(),s=(()=>i.z.union([i.z.array(o),o]).optional().nullable())(),c=(()=>i.z.object({name:i.z.union([i.z.string(),i.z.number()]).optional().nullable(),description:i.z.string().nullable().optional().nullable(),image:a.cB.nullable().optional(),animation_url:a.cB.optional().nullable()}))(),d=(()=>c.extend({external_url:a.cB.nullable().optional(),background_color:a.cC.optional().nullable(),properties:s,attributes:s}).catchall(i.z.union([a.cA,i.z.unknown()])))(),p=(()=>i.z.union([d,i.z.string()]))(),l=(()=>d.extend({id:i.z.string(),uri:i.z.string(),image:i.z.string().nullable().optional(),external_url:i.z.string().nullable().optional(),animation_url:i.z.string().nullable().optional()}))();async function u(t,r,i,o){if(!(0,n.i)(i)){const n=(await Promise.resolve().then(e.t.bind(e,49242,19))).default,s=t.getSigner(),c=t.getProvider(),d=new a.cu(s||c,i,n,t.options,t.storage),p=await t.getSignerAddress(),l=t.address;return(await d.read("allowance",[p,l])).lt(r)&&await d.sendTransaction("approve",[l,r]),o}o.value=r}}}]);
//# sourceMappingURL=9748.1ee2166d.chunk.js.map